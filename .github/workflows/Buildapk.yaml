name: Build FFmpeg + Android GUI APK with Binary

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Android NDK
        run: |
          mkdir -p $HOME/android-ndk
          cd $HOME/android-ndk
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip -q android-ndk-r25c-linux.zip
          mv android-ndk-r25c ndk

      - name: Download FFmpeg
        run: |
          git clone https://github.com/FFmpeg/FFmpeg ffmpeg --depth 1

      - name: Build FFmpeg for ARMv7 with MediaCodec
        run: |
          export API=21
          export NDK=$HOME/android-ndk/ndk
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$TOOLCHAIN/bin/llvm-as
          export CC=$TOOLCHAIN/bin/armv7a-linux-androideabi${API}-clang
          export CXX=$TOOLCHAIN/bin/armv7a-linux-androideabi${API}-clang++
          export LD=$TOOLCHAIN/bin/ld
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export NM=$TOOLCHAIN/bin/llvm-nm
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib

          cd ffmpeg
          ./configure \
            --prefix=$PWD/build/armeabi-v7a \
            --target-os=android \
            --arch=arm \
            --cpu=armv7-a \
            --enable-shared \
            --enable-gpl \
            --enable-jni \
            --enable-mediacodec \
            --enable-v4l2-m2m \
            --disable-vulkan \
            --disable-static \
            --disable-doc \
            --disable-programs \
            --cross-prefix=$TOOLCHAIN/bin/arm-linux-androideabi- \
            --cc=$CC \
            --cxx=$CXX \
            --ar=$AR \
            --nm=$NM \
            --strip=$STRIP \
            --ranlib=$RANLIB \
            --sysroot=$TOOLCHAIN/sysroot \
            --extra-cflags="-O3 -fPIC" \
            --extra-ldflags="-lm"

          make -j$(nproc) ffmpeg
          mkdir -p ../app/src/main/assets
          cp ffmpeg ../app/src/main/assets/ffmpeg

      - name: Create Android project structure with GUI
        run: |
          mkdir -p app/src/main/java/com/example/ffmpegapp
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/assets

          cat > settings.gradle <<'EOF'
          include ':app'
          rootProject.name = "FFmpegGUI"
          EOF

          cat > build.gradle <<'EOF'
          plugins {
              id 'com.android.application' version '8.2.2' apply false
              id 'org.jetbrains.kotlin.android' version '1.9.22' apply false
          }
          EOF

          cat > app/build.gradle <<'EOF'
          plugins {
              id 'com.android.application'
              id 'org.jetbrains.kotlin.android'
          }

          android {
              namespace "com.example.ffmpegapp"
              compileSdk 34

              defaultConfig {
                  applicationId "com.example.ffmpegapp"
                  minSdk 21
                  targetSdk 34
                  versionCode 1
                  versionName "1.0"
              }

              buildTypes {
                  release {
                      minifyEnabled false
                  }
              }
          }

          dependencies {
              implementation "androidx.core:core-ktx:1.13.1"
              implementation "androidx.appcompat:appcompat:1.7.0"
              implementation "com.google.android.material:material:1.12.0"
          }
          EOF

          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.example.ffmpegapp">

              <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
              <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
              <uses-permission android:name="android.permission.INTERNET"/>
              <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>

              <application
                  android:allowBackup="true"
                  android:label="FFmpeg GUI"
                  android:theme="@style/Theme.AppCompat.Light.NoActionBar">
                  <activity android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          cat > app/src/main/res/layout/activity_main.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" 
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:padding="16dp">

              <Button
                  android:id="@+id/runButton"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:text="FFmpeg verzió lekérdezése" />

              <ScrollView
                  android:layout_width="match_parent"
                  android:layout_height="match_parent">
                  <TextView
                      android:id="@+id/outputText"
                      android:layout_width="match_parent"
                      android:layout_height="wrap_content"
                      android:textSize="12sp"
                      android:scrollbars="vertical"/>
              </ScrollView>
          </LinearLayout>
          EOF

          cat > app/src/main/java/com/example/ffmpegapp/MainActivity.kt <<'EOF'
          package com.example.ffmpegapp

          import android.os.Bundle
          import android.widget.Button
          import android.widget.TextView
          import androidx.appcompat.app.AppCompatActivity
          import java.io.*

          class MainActivity : AppCompatActivity() {

              private lateinit var outputText: TextView

              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  setContentView(R.layout.activity_main)

                  outputText = findViewById(R.id.outputText)
                  val runButton: Button = findViewById(R.id.runButton)

                  runButton.setOnClickListener {
                      copyAndRunFFmpeg()
                  }
              }

              private fun copyAndRunFFmpeg() {
                  Thread {
                      try {
                          val ffmpegFile = File(filesDir, "ffmpeg")
                          if (!ffmpegFile.exists()) {
                              assets.open("ffmpeg").use { input ->
                                  FileOutputStream(ffmpegFile).use { output ->
                                      input.copyTo(output)
                                  }
                              }
                              ffmpegFile.setExecutable(true)
                          }

                          val process = Runtime.getRuntime().exec(arrayOf(ffmpegFile.absolutePath, "-version"))
                          val reader = BufferedReader(InputStreamReader(process.inputStream))
                          val output = reader.readText()

                          runOnUiThread {
                              outputText.text = output
                          }
                      } catch (e: Exception) {
                          runOnUiThread {
                              outputText.text = "Hiba: ${e.message}"
                          }
                      }
                  }.start()
              }
          }
          EOF

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload Release APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: auto-apk-${{ github.run_number }}
          name: "FFmpeg + GUI APK ${{ github.run_number }}"
          body: |
            Automatikusan generált APK FFmpeg ARMv7 + MediaCodec támogatással és futtatható binárissal.
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
